parameters:
- name: architecture
  type: string
- name: compilerPath
  type: string
- name: vcpkgTriplet
  type: string
- name: vcvarsPath
  type: string

steps:
- task: Cache@2
  inputs:
    key: '"vcpkg-installed-windows-${{parameters.architecture}}"'
    path: 'C:/vcpkg/installed'
  displayName: 'Environment storage'
- script: |
    vcpkg install libsodium openssl zlib --triplet ${{parameters.vcpkgTriplet}}
  workingDirectory: C:/vcpkg
  displayName: 'Prepare environment'
- script: '$(Build.SourcesDirectory)/.ci/azure-pipelines/windows_build.bat'
  env:
    ARCHITECTURE: ${{parameters.architecture}}
    COMPILER_PATH: ${{parameters.compilerPath}}
    VCPKG_TRIPLET: ${{parameters.vcpkgTriplet}}
    VCVARS_PATH: ${{parameters.vcvarsPath}}
    SE_BUILD_NUMBER_TOKEN: $(BUILD_NUMBER_TOKEN)
  displayName: 'Build'
- powershell: |
    . .ci/appveyor-vpntest.ps1
  displayName: 'Test'
- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.BinariesDirectory)'
    contents: '?(*.exe|*.se2|*.pdb)'
    TargetFolder: '$(Build.StagingDirectory)/binaries'
    flattenFolders: true
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.StagingDirectory)/binaries'
    artifactName: 'Binaries'
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.StagingDirectory)/installers'
    artifactName: 'Installers'
