name: Windows

on: 
  push:
  pull_request:

jobs:
  build_and_test:
    strategy:
      matrix:
        platform: [
          {
            ARCHITECTURE: x86,
            COMPILER_PATH: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/Llvm/bin/clang-cl.exe",
            VCPKG_TRIPLET: "x86-windows-static",
            VCVARS_PATH: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars32.bat"
          },
          {
            ARCHITECTURE: x64,
            COMPILER_PATH: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/Llvm/x64/bin/clang-cl.exe",
            VCPKG_TRIPLET: "x64-windows-static",
            VCVARS_PATH: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        ]
    runs-on: windows-latest
    name: ${{ matrix.platform.ARCHITECTURE }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: 'build/vcpkg_installed/'
          key: vcpkg-${{ matrix.platform.VCPKG_TRIPLET }}

      - name: Set version variables
        run: |
          Write-Output "VERSION=$(python version.py)" | Out-File -FilePath $Env:GITHUB_ENV -Encoding UTF8 -Append
        shell: pwsh

      - name: Build
        env:
          ARCHITECTURE: ${{ matrix.platform.ARCHITECTURE }}
          COMPILER_PATH: ${{ matrix.platform.COMPILER_PATH }}
          VCPKG_TRIPLET: ${{ matrix.platform.VCPKG_TRIPLET }}
          VCVARS_PATH: ${{ matrix.platform.VCVARS_PATH }}
        run: |
          set BUILD_NUMBER=0
          mkdir build
          cd build
          call "%VCVARS_PATH%"
          cmake -G "Ninja" -DCMAKE_TOOLCHAIN_FILE="C:\vcpkg\scripts\buildsystems\vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=%VCPKG_TRIPLET% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_COMPILER="%COMPILER_PATH%" -DCMAKE_CXX_COMPILER="%COMPILER_PATH%" -DBUILD_NUMBER=%BUILD_NUMBER% ..
          cmake --build .
          mkdir installers
          vpnsetup /SFXMODE:vpnclient /SFXOUT:"installers\softether-vpnclient-%VERSION%.%BUILD_NUMBER%.%ARCHITECTURE%.exe"
          vpnsetup /SFXMODE:vpnserver_vpnbridge /SFXOUT:"installers\softether-vpnserver_vpnbridge-%VERSION%.%BUILD_NUMBER%.%ARCHITECTURE%.exe"
        shell: cmd

      - name: Test
        shell: powershell
        run: |
          . .ci/appveyor-vpntest.ps1

      - name: Upload built binaries
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: Binaries-${{ matrix.platform.ARCHITECTURE }}
          path: |
            build/*.exe
            build/*.pdb
            build/*.se2

      - name: Upload installers
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: Installers-${{ matrix.platform.ARCHITECTURE }}
          path: build/installers